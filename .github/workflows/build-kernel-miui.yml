name: Build MIUI-Kernel
on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        device: [raphael, cepheus]

    name: Build MIUI-Kernel-${{ matrix.device }}
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "2G"
      CCACHE_HARDLINK: "true"

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y bison build-essential curl libssl-dev git zip python2 python3 flex libncurses5-dev wget binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 1
          export LLVM_VERSION=13
          echo "LLVM_VERSION=$LLVM_VERSION" >> $GITHUB_ENV
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh $LLVM_VERSION
          rm ./llvm.sh
          sudo ln -s --force /usr/bin/clang-$LLVM_VERSION /usr/bin/clang
          sudo ln -s --force /usr/bin/ld.lld-$LLVM_VERSION /usr/bin/ld.lld
          sudo ln -s --force /usr/bin/llvm-objdump-$LLVM_VERSION /usr/bin/llvm-objdump
          sudo ln -s --force /usr/bin/llvm-ar-$LLVM_VERSION /usr/bin/llvm-ar
          sudo ln -s --force /usr/bin/llvm-nm-$LLVM_VERSION /usr/bin/llvm-nm
          sudo ln -s --force /usr/bin/llvm-strip-$LLVM_VERSION /usr/bin/llvm-strip
          sudo ln -s --force /usr/bin/llvm-objcopy-$LLVM_VERSION /usr/bin/llvm-objcopy
          sudo ln -s --force /usr/bin/llvm-readelf-$LLVM_VERSION /usr/bin/llvm-readelf
          sudo ln -s --force /usr/bin/clang++-$LLVM_VERSION /usr/bin/clang++

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup kernel source
        uses: actions/checkout@v3
        with:
          submodules: true
          repository: Laulan56/android_kernel_xiaomi_sm8150
          ref: miui
          path: kernel-source

      - name: Checkout Anykernel
        uses: actions/checkout@v3
        with:
          submodules: true
          repository: Laulan56/anykernel
          ref: miui-r
          path: anykernel

      - name: Setup KernelSU
        working-directory: kernel-source
        run: |
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -
          defconfig="arch/arm64/configs/${{ matrix.device }}_defconfig"
          echo "CONFIG_MODULES=y" >> $defconfig
          echo "CONFIG_KPROBES=y" >> $defconfig
          echo "CONFIG_HAVE_KPROBES=y" >> $defconfig
          echo "CONFIG_KPROBE_EVENTS=y" >> $defconfig
          cd KernelSU
          echo "KSU_VERSION=$(($(git rev-list --count HEAD) + 10200))" >> $GITHUB_ENV
          cd -

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: MIUI-Kernel-${{ matrix.device }}
          save: ${{ github.event_name != 'pull_request' }}

      - name: Build Kernel
        working-directory: kernel-source
        run: |
          git apply $GITHUB_WORKSPACE/.github/patches/4.14/*.patch
          date=$(date +"%Y%m%d%H%M")
          middlever=r23
          echo "date=$date" >> $GITHUB_ENV
          echo "middlever=$middlever" >> $GITHUB_ENV
          LLVM="CC=clang LD=ld.lld AR=llvm-ar NM=llvm-nm STRIP=llvm-strip OBJDUMP=llvm-objdump READELF=llvm-readelf HOSTCC=clang HOSTCXX=clang++ HOSTAR=llvm-ar HOSTLD=ld.lld"
          args="-j`nproc` O=out ARCH=arm64 SUBARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- LOCALVERSION=-$middlever-$date CCACHE=ccache $LLVM"
          echo "Building kernel with $args"

          export KBUILD_BUILD_USER="Howard"
          export KBUILD_BUILD_HOST="MarisaKernel"

          make $args ${{ matrix.device }}_defconfig && make $args

      - name: Upload MIUI-kernel-${{ matrix.device }}
        uses: actions/upload-artifact@v3
        with:
          name: MIUI-kernel-${{ matrix.device }}
          path: kernel-source/out/arch/arm64/boot/*

      - name: Prepare Anykernel
        working-directory: anykernel
        run: |
          cp -f $GITHUB_WORKSPACE/kernel-source/out/arch/arm64/boot/Image-dtb .
          cp -f $GITHUB_WORKSPACE/kernel-source/out/arch/arm64/boot/dtbo.img .
          ZIP_NAME="MarisaKernel-${{ matrix.device }}-miui-r-${{ env.middlever }}-ksu-${{ env.KSU_VERSION }}-${{ env.date }}"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
          zip -r "$ZIP_NAME.zip" *
          mv "$ZIP_NAME.zip" $GITHUB_WORKSPACE

      - name: Upload Anykernel
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ZIP_NAME }}
          path: anykernel/*

      - name: Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: |
            kernel-source/out/arch/arm64/boot/*
            ${{ env.ZIP_NAME }}.zip
          draft: true
          tag_name: ${{ github.ref }}-${{ matrix.device }}

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 0
          keep_minimum_runs: 10
