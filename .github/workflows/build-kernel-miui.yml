name: Build MIUI-Kernel
on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        device: [raphael, cepheus]

    name: Build MIUI-Kernel-${{ matrix.device }}
    runs-on: ubuntu-latest

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y bison build-essential curl libssl-dev git zip python2 python3 flex libncurses5-dev wget
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 1

      - name: Checkout Tool Chain
        uses: actions/checkout@v3
        with:
          repository: kdrag0n/proton-clang
          path: proton-clang

      - name: Setup kernel source
        uses: actions/checkout@v3
        with:
          submodules: true
          repository: Laulan56/android_kernel_xiaomi_sm8150
          ref: miui
          path: kernel-source

      - name: Setup KernelSU
        working-directory: kernel-source
        run: |
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -
          echo "CONFIG_MODULES=y" >> arch/arm64/configs/${{ matrix.device }}_defconfig
          echo "CONFIG_KPROBES=y" >> arch/arm64/configs/${{ matrix.device }}_defconfig
          echo "CONFIG_HAVE_KPROBES=y" >> arch/arm64/configs/${{ matrix.device }}_defconfig
          echo "CONFIG_KPROBE_EVENTS=y" >> arch/arm64/configs/${{ matrix.device }}_defconfig

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: MIUI-Kernel-${{ matrix.device }}
          save: ${{ github.event_name != 'pull_request' }}

      - name: Build Kernel
        working-directory: kernel-source
        run: |
          clang_path="ccache ${GITHUB_WORKSPACE}/proton-clang/bin/clang"
          gcc_path="ccache ${GITHUB_WORKSPACE}/proton-clang/bin/aarch64-linux-gnu-"
          gcc_32_path="ccache ${GITHUB_WORKSPACE}/proton-clang/bin/arm-linux-gnueabi-"
          date="`date +"%Y%m%d%H%M"`"
          firstver="Marisa"
          middlever="dev"
          args="-j`nproc` O=out ARCH=arm64 SUBARCH=arm64 CC="$clang_path" CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE="$gcc_path" CROSS_COMPILE_ARM32="$gcc_32_path" LOCALVERSION=-${middlever}-${date} CCACHE=/usr/bin/ccache"
          echo "Building kernel with $args"

          export KBUILD_BUILD_USER="Howard"
          export KBUILD_BUILD_HOST="MarisaKernel"

          make $args ${{ matrix.device }}_defconfig && make $args

      - name: Upload MIUI-kernel-${{ matrix.device }}
        uses: actions/upload-artifact@v3
        with:
          name: MIUI-kernel-${{ matrix.device }}
          path: kernel-source/out/arch/arm64/boot/*

      - name: Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: kernel-source/out/arch/arm64/boot/*
          draft: true
          tag_name: ${{ github.ref }}-${{ matrix.device }}

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 0
          keep_minimum_runs: 10
