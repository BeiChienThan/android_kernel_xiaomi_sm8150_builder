name: Build MIUI-Kernel
on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        device: [raphael, cepheus]

    name: Build MIUI-Kernel-${{ matrix.device }}
    runs-on: ubuntu-latest

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y bison build-essential curl libssl-dev git zip python2 python3 flex libncurses5-dev wget
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 1

      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout Tool Chain
        uses: actions/checkout@v3
        with:
          repository: kdrag0n/proton-clang
          path: proton-clang

      - name: Setup kernel source
        uses: actions/checkout@v3
        with:
          submodules: true
          repository: Laulan56/android_kernel_xiaomi_sm8150
          ref: miui
          path: kernel-source

      - name: Checkout Anykernel
        uses: actions/checkout@v3
        with:
          submodules: true
          repository: Laulan56/anykernel
          ref: miui-r
          path: anykernel

      - name: Setup KernelSU
        working-directory: kernel-source
        run: |
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -
          echo "CONFIG_MODULES=y" >> arch/arm64/configs/${{ matrix.device }}_defconfig
          echo "CONFIG_KPROBES=y" >> arch/arm64/configs/${{ matrix.device }}_defconfig
          echo "CONFIG_HAVE_KPROBES=y" >> arch/arm64/configs/${{ matrix.device }}_defconfig
          echo "CONFIG_KPROBE_EVENTS=y" >> arch/arm64/configs/${{ matrix.device }}_defconfig

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: MIUI-Kernel-${{ matrix.device }}
          save: ${{ github.event_name != 'pull_request' }}

      - name: Build Kernel
        working-directory: kernel-source
        run: |
          git apply $GITHUB_WORKSPACE/.github/patches/4.14/*.patch
          clang_path="${GITHUB_WORKSPACE}/proton-clang/bin/clang"
          gcc_path="${GITHUB_WORKSPACE}/proton-clang/bin/aarch64-linux-gnu-"
          gcc_32_path="${GITHUB_WORKSPACE}/proton-clang/bin/arm-linux-gnueabi-"
          echo "date=`date +"%Y%m%d%H%M"`" >> $GITHUB_ENV
          echo "middlever=dev" >> $GITHUB_ENV
          args="-j`nproc` O=out ARCH=arm64 SUBARCH=arm64 CC=$clang_path CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=$gcc_path CROSS_COMPILE_ARM32=$gcc_32_path LOCALVERSION=-${{ env.middlever }}-${{ env.date }} CCACHE=/usr/bin/ccache"
          echo "Building kernel with $args"

          export KBUILD_BUILD_USER="Howard"
          export KBUILD_BUILD_HOST="MarisaKernel"

          make $args ${{ matrix.device }}_defconfig && make $args

      - name: Upload MIUI-kernel-${{ matrix.device }}
        uses: actions/upload-artifact@v3
        with:
          name: MIUI-kernel-${{ matrix.device }}
          path: kernel-source/out/arch/arm64/boot/*

      - name: Prepare Anykernel
        working-directory: anykernel
        run: |
          cp -f $GITHUB_WORKSPACE/kernel-source/out/arch/arm64/boot/Image-dtb .
          cp -f $GITHUB_WORKSPACE/kernel-source/out/arch/arm64/boot/dtbo.img .
          zip -r "MarisaKernel-${{ matrix.device }}-${{ env.middlever }}-${{ env.date }}.zip" *
          mv "MarisaKernel-${{ matrix.device }}-${{ env.middlever }}-${{ env.date }}.zip" $GITHUB_WORKSPACE

      - name: Upload Anykernel
        uses: actions/upload-artifact@v3
        with:
          name: MarisaKernel-${{ matrix.device }}-${{ env.middlever }}-${{ env.date }}
          path: anykernel/*

      - name: Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: |
            kernel-source/out/arch/arm64/boot/*
            MarisaKernel-${{ matrix.device }}-${{ env.middlever }}-${{ env.date }}.zip
          draft: true
          tag_name: ${{ github.ref }}-${{ matrix.device }}

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 0
          keep_minimum_runs: 10
